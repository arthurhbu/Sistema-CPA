services:
  servidor-ai:
    image: docker.io/ollama/ollama
    volumes:
      - vol-ollama:/root/.ollama:rw
    networks:
      - backend-network

  flask-backend:
    build: ./backend
    container_name: flask-backend
    ports:
      - "4500:4500"
    depends_on:
      - mongo
    environment:
      FLASK_ENV: development
    volumes:
      - ./backend:/app
    networks:
      - backend-network

  react-frontend:
      build: ./frontend
      ports:
        - "3000:3000"
      volumes:
        - ./frontend:/app
        - /app/node_modules
      environment: 
        - WATCHPACK_POLLING=true
        - REACT_APP_BACKEND=${BACKEND}
      networks:
        - backend-network


  mongo:
    image: docker.io/mongo:4.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - vol-mongo:/data/db  
    networks:
      - backend-network

  mongo-express:
    image: docker.io/mongo-express:latest
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD} 
      ME_CONFIG_BASICAUTH: false     
    depends_on:
      - mongo
    ports:
      - "8081:8081"
    networks:
      - backend-network

  conversor-pdf-backend:
    image: quay.io/uemcpa/conversor-pdf-backend
    ports:
      - "5000:5000"
    networks:
      - backend-network

volumes:
  vol-mongo:
  vol-ollama:

networks:
  backend-network:
    driver: bridge

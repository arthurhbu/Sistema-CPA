version: '3.8'

services:
  flask-backend:
    build: ./backend
    container_name: flask-backend
    depends_on:
      - mongo
    environment:
      FLASK_ENV: development
    networks:
      - rede-cpa

  react-frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    depends_on:
      - flask-backend
    environment: 
      WATCHPACK_POLLING: true
      REACT_APP_API_URL: http://flask-backend:5000
    networks:
      - rede-cpa

  mongo:
    image: docker.io/mongo:4.4
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    volumes:
      - vol-mongo:/data/db  
    networks:
      - rede-cpa

  mongo-express:
    image: docker.io/mongo-express:latest
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD} 
      ME_CONFIG_BASICAUTH: false     
    depends_on:
      - mongo
    ports:
      - "8081:8081"
    networks:
      - rede-cpa

  # nginx:
  #   image: docker.io/nginx:latest
  #   container_name: nginx
  #   ports:
  #     - "4500:80"
  #     - "4443:443"  # Para HTTPS (opcional)
  #   volumes:
  #     - ./nginx-config/nginx.conf:/etc/nginx/conf.d/default.conf
  #     - ./certbot/conf:/etc/letsencrypt  # Para HTTPS (opcional)
  #     - ./certbot/www:/var/www/certbot  # Para HTTPS (opcional)
  #   depends_on:
  #     - react-frontend
  #     - flask-backend
  #   networks:
  #     - rede-cpa

volumes:
  vol-mongo:
  volume-ollama:

networks:
  rede-cpa:
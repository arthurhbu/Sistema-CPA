services:
  wg:
    image: docker.io/procustodibus/wireguard
    volumes: 
      - ../wg:/etc/wireguard:rw
    cap_add:
      - NET_ADMIN
      - NET_RAW
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    restart: unless-stopped
    ports:
      - 3000:3000
      - 8081:8081
    security_opt:
      - label=disable
    networks:
      - rede-cpa

  
  web01:
    image: docker.io/traefik/whoami
    network_mode: service: wg
    networks:
      - rede-cpa

  flask-backend:
    image: docker.io/uemcpa/relatorios-backend
    
    environment:  
      FLASK_ENV: development
    networks: 
      - rede-cpa
    
  react-frontend:
    image: docker.io/uemcpa/relatorios-frontend
    depends_on:
      - flask-backend
    environment:
      WATCHPACK_POLLING: true
    network_mode: service:wg
    networks: 
      - rede-cpa


  mongo-express:
    image: docker.io/mongo-express
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ENABLE_ADMIN: "true"
      ME_CONFIG_MONGODB_AUTH_DATABASE: admin
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD} 
      ME_CONFIG_BASICAUTH: false     
    network_mode: service:wg
    depends_on:
      - mongo
    networks:
      - rede-cpa
    

networks:
  rede-cpa: